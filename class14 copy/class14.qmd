---
title: "class14"
author: "Laurie Chang A16891192"
format: pdf
editor: visual
---


Run a couple RNASeq Analysis workflow from counts to enriched genesets..

## Data Import

```{r}
library(DESeq2)
```

```{r}
metaFile <- "GSE37704_metadata.csv"
countFile <- "GSE37704_featurecounts.csv"

# Import metadata and take a peak
colData <- read.csv(metaFile, row.names=1)
head(colData)

#Import countData and take a peak
countData = read.csv(countFile, row.names=1)
head(countData)
```

##Data Exploration

```{r}
countData <- as.matrix(countData[,2:7])
head(countData)
```

```{r}
colnames(countData) == row.names(colData)
```


We need to remove all the zero count genes

```{r}
# Filter count data where you have 0 read count across all samples.
to.keep.inds <- rowSums(countData) > 0
nonzerocounts <- countData[to.keep.inds,]
```


##DESeq setup and analysis

```{r}
dds <- DESeqDataSetFromMatrix(countData=nonzerocounts,
                             colData=colData,
                             design=~condition)
dds <- DESeq(dds)
```

```{r}
dds
```

##Result extraction

```{r}
res <- results(dds, contrast=c("condition", "hoxa1_kd", "control_sirna"))

summary(res)
```


##Volcano plot

```{r}
plot( res$log2FoldChange, -log(res$padj) )
```

```{r}
# Make a color vector for all genes
mycols <- rep("gray", nrow(res) )

# Color red the genes with absolute fold change above 2
mycols[ abs(res$log2FoldChange) > 2 ] <- "red"

# Color blue those with adjusted p-value less than 0.01
#  and absolute fold change more than 2
inds <- (res$padj < 0.01) & (abs(res$log2FoldChange) > 2 )
mycols[ inds ] <- "blue"

plot( res$log2FoldChange, -log(res$padj), col= mycols, xlab="Log2(FoldChange)", ylab="-Log(P-value)" )
```


##Gene Annotation

```{r}
library(AnnotationDbi)
library(org.Hs.eg.db)

columns(org.Hs.eg.db)

res$symbol = mapIds(org.Hs.eg.db,
                    keys= row.names(res), 
                    keytype="ENSEMBL",
                    column="SYMBOL",
                    multiVals="first")

res$entrez = mapIds(org.Hs.eg.db,
                    keys=row.names(res),
                    keytype="ENSEMBL",
                    column="ENTREZID",
                    multiVals="first")

res$name =   mapIds(org.Hs.eg.db,
                    keys=row.names(res),
                    keytype="ENSEMBL",
                    column="GENENAME",
                    multiVals="first")

head(res, 10)
```

```{r}
res <- res[order(res$pvalue),]
write.csv(res, file = "deseq_results.csv")
```


##Pathway analysis

```{r}
library(pathview)
library(gage)
library(gageData)

data(kegg.sets.hs)
data(sigmet.idx.hs)

# Focus on signaling and metabolic pathways only
kegg.sets.hs = kegg.sets.hs[sigmet.idx.hs]

# Examine the first 3 pathways
head(kegg.sets.hs, 3)
```

```{r}
foldchanges <- res$log2FoldChange
names(foldchanges) <- res$entrez
head(foldchanges)
```


```{r}
keggres <- gage(foldchanges, gsets = kegg.sets.hs)

attributes(keggres)
```

```{r}
head(keggres$less)
```

```{r}
pathview(gene.data=foldchanges, pathway.id="hsa04110")
```
![](hsa04110.pathview.png)

```{r}
pathview(gene.data=foldchanges, pathway.id="hsa04110", kegg.native = FALSE)
```
![](hsa04110.pathview.pdf)


```{r}
## Focus on top 5 upregulated pathways here for demo purposes only
keggrespathways <- rownames(keggres$greater)[1:5]

# Extract the 8 character long IDs part of each string
keggresids <- substr(keggrespathways, start=1, stop=8)
keggresids
```


```{r}
pathview(gene.data=foldchanges, pathway.id=keggresids, species="hsa")
```

![](hsa04640.png)

![](hsa00140.png)

![](hsa04630.png)

![](hsa04142.png)

![](hsa04330.png)

## Using Gene Ontology (GO)

```{r}
data("go.sets.hs")
data("go.subs.hs")

# Focus on Biological Process subset of GO
gobpsets = go.sets.hs[go.subs.hs$BP]

gobpres <- gage(foldchanges, gsets = gobpsets, same.dir = TRUE)

lapply(gobpres, head)
```

## Reactome Analysis

We can use reactome via an R package or use their relatively new website interface. Let's try to use the latter.

It wants a list of our most interesting (i.e. significant) genes in gene SYMBOL format.

```{r}
sig_genes <- res[res$padj <= 0.05 & !is.na(res$padj), "symbol"]
```

We will write these out to a wee file so that we can use them on the website:

```{r}
write.table(sig_genes, file="significant_genes.txt", row.names=FALSE, col.names=FALSE, quote=FALSE)
```


![](R-HSA-69278.png)






