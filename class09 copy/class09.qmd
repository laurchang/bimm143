---
title: "class09"
format: pdf
author: Laurie Chang A16891192
editor: visual
---

Here we analyze a candy dataset from he 538 website. This is a CSV file from their GitHub respository.

## Importing Candy Data

```{r}
candy <- read.csv("candy-data.csv", row.names = 1)

head(candy)
```

> Q1. How many different candy types are in this dataset?

```{r}
dim(candy)
```

There are 85 different types of candy in this dataset.

> Q2. How many fruity candy types are in the dataset?

```{r}
sum(candy$fruity)
```

There are 38 fruity candy types in this dataset.

## What is your favorite candy?

One of the most interesting variables in the dataset is winpercent. For a given candy this value is the percentage of people who prefer this candy over another randomly chosen candy from the dataset (what 538 term a matchup). Higher values indicate a more popular candy.

We can find the winpercent value for Twix by using its name to access the corresponding row of the dataset. This is because the dataset has each candy name as rownames (recall that we set this when we imported the original CSV file). For example the code for Twix is:

```{r}
candy["Twix",]$winpercent
```

> Q3. What is your favorite candy in the dataset and what is it’s winpercent value?

Kit Kat is my favorite candy.

```{r}
candy["Kit Kat", ]$winpercent
```

Kit Kat has a win percent of 76.7686%.

> Q4. What is the winpercent value for “Kit Kat”?

```{r}
candy["Kit Kat", ]$winpercent
```

Kit Kat has a win percent of 76.7686%.

> Q5. What is the winpercent value for “Tootsie Roll Snack Bars”?

```{r}
candy["Tootsie Roll Snack Bars",]$winpercent
```

Tootsie Roll Snack Bars has a win percent of 49.6535%.

**SORT AND ORDER**

```{r}
x <- c(5, 1 , 4, 3)
sort(x)
```

Puts the numbers from smallest to largest.

```{r}
order(x)
```

Tells you the bucket number the smallest number is in, second smallest, etc.

>Which candy has the smallest win percent?

```{r}
inds <- order(candy$winpercent)
head(candy[inds,])
```
*KEY POINT* 

Looking at one variable, sorting it by whatever you are interested in, and then applying it the whole table.

**Using `skimr`**

```{r} 
library(skimr) 
skim(candy) 
```

> Q6. Is there any variable/column that looks to be on a different scale to the majority of the other columns in the dataset?

win percent. 

>Q7. What do you think a zero and one represent for the candy$chocolate column?

zero = no chocolate
one = yes chocolate

**PLOTTING**

A good place to start any exploratory analysis is with a histogram.

>Q8. Plot a histogram of winpercent values

```{r}
library(ggplot2)
ggplot(candy, aes(candy$winpercent)) +
  geom_histogram(binwidth = 5)
```

>Q9. Is the distribution of winpercent values symmetrical?

The distribution of winpercent values is not symmetrical.

>Q10. Is the center of the distribution above or below 50%?

The center of the distribution looks to be below 50%.

>Q11. On average is chocolate candy higher or lower ranked than fruit candy?

First find all chocolate candy and their $winpercent values. 

Next, summarize these values into one number.

Then do the same for fruit candy and compare the numbers.

```{r}
winpercent.chocolate <- candy$winpercent[as.logical(candy$chocolate)]
winpercent.fruity <- candy$winpercent[as.logical(candy$fruity)]

averagechocolate <- mean(candy$winpercent[as.logical(candy$chocolate)])
averagefruity <- mean(candy$winpercent[as.logical(candy$fruity)])
```

With an average win percent of 60.92153%, chocolate candy is higher ranked than fruit candy (44.11974%).

>Q12. Is this difference statistically significant?

```{r}
t.test(winpercent.chocolate, winpercent.fruity)
```

Since there is an extremely small p-value, the reuslts are significant.

## Overall Candy Rankings

Let’s use the base R order() function together with head() to sort the whole dataset by winpercent:

```{r}
head(candy[order(candy$winpercent),], n=5)
```

Or if you have been getting into the tidyverse and the dplyr package you can use the arrange() function together with head() to do the same thing:

```{r}
library(dplyr)
candy %>% arrange(winpercent) %>% head(5)
```

>Q13. What are the five least liked candy types in this set?

Nik L Nip, Boston Baked Beans, Chiclets, Super Bubble, and Jawbusters are the 5 least liked candy types in this set.

>Q14. What are the top 5 all time favorite candy types out of this set?

```{r}
candy %>% arrange(desc(winpercent)) %>% head(5)
```

Reese's Peanut Butter Cup, Reese's Miniatures, Twix, Kit Kat, and Snickers are the top 5 all time favorite candy types out of this set.

>Q15. Make a first barplot of candy ranking based on winpercent values.

```{r}
ggplot(candy) +
  aes(winpercent, rownames(candy)) +
  geom_col() +
  theme(
    axis.text = element_text(size = 3)
  )
```

>Q16. This is quite ugly, use the reorder() function to get the bars sorted by winpercent?

```{r}
winpercent.sorted <- reorder(rownames(candy), candy$winpercent)

ggplot(candy) +
  aes(winpercent, winpercent.sorted) +
  geom_col() +
  theme(
    axis.text = element_text(size = 3)
  )
```

Let’s setup a color vector (that signifies candy type) that we can then use for some future plots. We start by making a vector of all black values (one for each candy). Then we overwrite chocolate (for chocolate candy), brown (for candy bars) and red (for fruity candy) values.

```{r}
#Start with an all black number of vectors that is equal to the number of rows
my_cols <- rep("black", nrow(candy))
# means repeat black for the number of rows that exist in candy
my_cols[as.logical(candy$chocolate)] <- "chocolate"
# colors chocolate for every true that is called
my_cols[as.logical(candy$bar)] <- "brown"
my_cols[as.logical(candy$fruity)] <- "pink"
```


```{r}
ggplot(candy) +
  aes(winpercent, winpercent.sorted) +
  geom_col(fill = my_cols) +
  theme(
    axis.text = element_text(size = 3)
  )
```

>Q17. What is the worst ranked chocolate candy?

Sixlets

> Q18. What is the best ranked fruity candy?

Starburst

**INSERTING PICTURES**
`![](filename)`
should appear when rendered
can add caption text inside the square parenthesis
can also add an image link inside the parenthesis 

## Taking a look at pricepercent

What about value for money? What is the the best candy for the least money? One way to get at this would be to make a plot of winpercent vs the pricepercent variable. The pricepercent variable records the percentile rank of the candy’s price against all the other candies in the dataset. Lower vales are less expensive and high values more expensive.

If we want to see what is a good candy to buy in terms of winpercent and pricepercent we can plot these two variables and then see the best candy for the least amount of money.

To this plot we will add text labels so we can more easily identify a given candy. There is a regular geom_label() that comes with ggplot2. However, as there are quite a few candys in our dataset lots of these labels will be overlapping and hard to read. To help with this we can use the geom_text_repel() function from the ggrepel package.

To avoid the overplotting of all these labels we can use an add on package called ggrepel.

```{r}
library(ggrepel)

ggplot(candy) +
  aes(winpercent, pricepercent, label = rownames(candy)) +
  geom_point(col = my_cols) +
  geom_text_repel(col= my_cols, size=1.0, max.overlaps = 5) 
```

Play with the max overlaps parameter to see how that changes the plot.
```{r}
library(ggrepel)

ggplot(candy) +
  aes(winpercent, pricepercent, label = rownames(candy)) +
  geom_point(col = my_cols) +
  geom_text_repel(col= my_cols, size=1.0, max.overlaps = 10) 
```

>Q19. Which candy type is the highest ranked in terms of winpercent for the least money - i.e. offers the most bang for your buck?

Tootsie Roll Midgies

```{r}
ord <- order(candy$pricepercent, decreasing = FALSE)
head( candy[ord, c(11,12)], n=5 )
```

>Q20. What are the top 5 most expensive candy types in the dataset and of these which is the least popular?

```{r}
ord <- order(candy$pricepercent, decreasing = TRUE)
head( candy[ord, c(11,12)], n=5 )
```
Nik L Nip, Nestle Smarties, Ring pop, Hershey's Krackel, and Hershey's Milk Chocolate are the top 5 most expensive candy types in the dataset. Nik L Nip are the least popular candy out of the 5 most expensive.


*We can also do this for which is the least expensive, see Q19.

## Exploring Correlation Structure

```{r}
library(corrplot)

cij <- cor(candy)
corrplot(cij)
```

>Q22. Examining this plot what two variables are anti-correlated (i.e. have minus values)?

Chocolate and fruity

>Q23. Similarly, what two variables are most positively correlated?

Winpercent and chocolate
Chocolate and bar


## Principal Component Analysis

The main function for this is `prcomp()` and here we know we need to scale our data with the `scale = TRUE` argument (or else winpercent will overpower all other variables due to those values being much larger than all the other values).

```{r}
pca <- prcomp(candy, scale = TRUE)
summary(pca)
```

```{r}
plot(pca$x[,1:2])
```

Plot my main PCA score plot with ggplot

```{r}
# Make a new data-frame with our PCA results and candy data
my_data <- cbind(candy, pca$x[,1:3])
```


```{r}
p <- ggplot(my_data) + 
        aes(PC1, PC2,label=rownames(candy)) +
        geom_point(col=my_cols) +
        geom_text_repel(col = my_cols) +
        labs(title = "PCA Candy Space Map")

p
```

## Loadings plot

```{r}
pca$rotation
```

```{r}
loadings <- as.data.frame(pca$rotation)

ggplot(loadings) +
  aes(PC1, reorder(rownames(loadings), PC1)) +
  geom_col()
```

> Q24. What original variables are picked up strongly by PC1 in the positive direction? Do these make sense to you?

The fruity variable is picked up strongly by PC1 in the positive direction. This makes sense because most fruity candies are hard and come plentiful in a bag. 











